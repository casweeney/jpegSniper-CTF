import { loadFixture } from "@nomicfoundation/hardhat-network-helpers";
import { expect } from "chai";
import { ethers } from "hardhat";
import { Contract, Signer } from "ethers"


let attacker: Signer;
let admin: Signer;
let flatLaunchpeg: Contract;
let exploiter: Contract;
// let startBlock: number;

describe("Exploiter", function () {
    async function deployExploiter() {
        [admin, attacker] = await ethers.getSigners();

        const flatLaunchpegFactory = await ethers.getContractFactory('FlatLaunchpeg')
        flatLaunchpeg = await flatLaunchpegFactory.connect(admin).deploy(69,5,5)

        return { admin, attacker, flatLaunchpeg };
    }

    describe("flatLaunchpeg", function () {
        it("It should exploit flatLaunchpeg", async function () {
            const { flatLaunchpeg, attacker } = await loadFixture(deployExploiter);
            const exploiterFactory = await ethers.getContractFactory("jpegSniperExploiter")
            exploiter = await exploiterFactory.connect(attacker).deploy(flatLaunchpeg.address, await attacker.getAddress())


            expect(await flatLaunchpeg.totalSupply()).to.be.equal(69)
            console.log(await flatLaunchpeg.totalSupply(), "Total supply")
            expect(await flatLaunchpeg.balanceOf(await attacker.getAddress())).to.be.equal(69)
            console.log(await flatLaunchpeg.balanceOf(await attacker.getAddress()), "balance after attack")
        })

    })
})